#!/usr/bin/env python3
# pulputils
# Copyright (C) 2017  Salvo "LtWorf" Tomaselli
#
# pulputils is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# author Salvo "LtWorf" Tomaselli <tiposchi@tiscali.it>

import argparse
import os
import os.path
import sys

import pulputils

_ = pulputils._


def getsymlinks(path):
    '''
    yields all the symlinks in a given path
    '''
    for i in os.listdir(path):
        item = path + '/' + i
        if os.path.islink(item):
            yield item
        elif os.path.isdir(item):
            yield from getsymlinks(item)


def replacelink(link):
    real = os.path.realpath(link)
    pointing = os.readlink(link)

    if not os.access(real, os.R_OK):
        raise PermissionError(_('No read permissions on %s') % real)

    os.unlink(link)

    try:
        with open(real, 'rb') as readfd:
            with open(link, 'wb') as writefd:
                while True:
                    b = readfd.read(4096)
                    if not b:
                        break
                    writefd.write(b)
                    #OSError: [Errno 28] No space left on device
    except:
        print(_('Restoring link %s') % link, file=sys.stderr)
        os.unlink(link)
        os.symlink(pointing, link)
        raise


def main():
    parser = argparse.ArgumentParser(
        description=_('Replace links with regular files'),
        formatter_class=argparse.RawTextHelpFormatter
    )
    parser.add_argument(
        'paths',
        metavar='DIRECTORY',
        type=str,
        nargs='+',
        help=_('Directory')
    )
    parser.add_argument('-v', '--verbose', action='store_true')
    parser.add_argument(
        '--version',
        action='version',
        version=pulputils.VERBOSE_VERSION,
        help=_('show program\'s version number and exit')
    )
    args = parser.parse_args()

    for path in args.paths:
        for i in getsymlinks(path):
            args.verbose and print(_('Replacing %s with regular file') % i)
            replacelink(i)


if __name__ == '__main__':
    main()

#TODO handle interrupt
