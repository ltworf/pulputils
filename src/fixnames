#!/usr/bin/env python3
# pulputils
# Copyright (C) 2016  Salvo "LtWorf" Tomaselli
#
# pulputils is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# author Salvo "LtWorf" Tomaselli <tiposchi@tiscali.it>

import argparse
import os
import sys


SUBSTITUTIONS = {
    (' ', '_'),
    ('!', ''),
    ('(', '['),
    (')', ']'),
    ('\'', ''),
    ('"', ''),
}


def fixedname(name, substitutions):
    '''
    Returns the new name, according to substitutions
    '''
    for a, b in substitutions:
        name = name.replace(a, b)
    return name


def rename_things(dirname, substitutions, verbose, force, recursive):
    try:
        files = os.listdir(dirname)
    except FileNotFoundError:
        print('File not found', file=sys.stderr)
        return 2
    except NotADirectoryError:
        print('Not a directory', file=sys.stderr)
        return 2

    for i in files:
        j = fixedname(i, substitutions)
        if i == j:
            continue # Nothing to do
        if not os.path.exists(dirname + '/' + j) and len(j):
            if verbose:
                print('%s -> %s' % (i, j))
            os.rename(dirname + '/' + i, dirname + '/' + j)
        else:
            print('Skipping %s -> %s' % (i, j), file=sys.stderr)
            if not force:
                return 1

    # Scanning again. Needs to be done again because the names might be changed
    if recursive:
        for i in os.listdir(dirname):
            f = dirname + '/' + i
            if os.path.isdir(f):
                r = rename_things(f, substitutions, verbose, force, recursive)
                if r and not force:
                    return r
    return 0


def main():
    parser = argparse.ArgumentParser(description='Rename files to avoid escapes')
    parser.add_argument('paths', metavar='DIRECTORY', type=str, nargs='+',
                   help='Directory')
    parser.add_argument('--verbose', action='store_true')
    parser.add_argument('-f', '--force', action='store_true', help='Do not terminate in case of errors')
    parser.add_argument('-r', '-R', '--recursive', action='store_true')

    args = parser.parse_args()
    for path in args.paths:
        if args.verbose:
            print('Scanning %s' % path)
        r = rename_things(
            path,
            SUBSTITUTIONS,
            args.verbose,
            args.force,
            args.recursive
        )
        if r != 0 and not args.force:
            sys.exit(r)


if __name__ == '__main__':
    main()
